name: r2s openwet固件(测试)

on:
  push:
    branches: [ master ]
    paths:
      - '.github/workflows/openwrt.yml'
  schedule:
    - cron: '10 08 * * *'

jobs:

  build:

    runs-on: ubuntu-latest
    if: github.repository == 'zming66/R2S'

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: . 1_initialization_environment.sh

      - name: Clone Source
        run: |
          mkdir friendlywrt-rk3328
          cd friendlywrt-rk3328
          repo init -u https://github.com/kongfl888/friendlywrt_manifests -b master -m rk3328.xml --repo-url=https://github.com/friendlyarm/repo  --no-clone-bundle
          #rm -f .repo/manifests/rk3328.xml
          #cp ../JUNK/rk3328.xml .repo/manifests/rk3328.xml
          repo sync -c  --no-clone-bundle
      
      - name: Patch For R2S
        run: |
          . ./scripts/patch_for_r2s.sh 4
      - name: Patch For kernel 5.4
        run: |
          . ./scripts/patch_for_r2s_5.4.sh 1
      
      - name: Setup Configuration
        run: |
            cd friendlywrt-rk3328
          #. ../remove_unused_config.sh
          . ../patch_dosth.sh
          #sed -i 's/CONFIG_BPFILTER=y/CONFIG_BPFILTER=n/' kernel/arch/arm64/configs/nanopi-r2_linux_defconfig
          sed -i 's/dnsmasq /dnsmasq-full /' friendlywrt/include/target.mk
          [ -f configs/config_rk3328 ] && sed -i '/adblock/d;/docker/d;/DOCKER/d;/mwan3/d;/OPENVPN/d;/openvpn/d;' configs/config_rk3328
          cat ../JUNK/r2s_original2_base.conf >> configs/config_rk3328
          cat ../JUNK/r2s_original2_kmod.conf >> configs/config_rk3328
          cat ../JUNK/r2s_original2_base_snapshot.conf >> configs/config_rk3328
          cat ../JUNK/r2s_original2_user_little.conf >> configs/config_rk3328
          cd friendlywrt
          mv ../../scripts/one_time_init.sh package/base-files/files/usr/bin && sed -i '/exit/i\/bin/sh /usr/bin/one_time_init.sh 24 &' package/base-files/files/etc/rc.local
          mv ../../scripts/flash_rom.sh package/base-files/files/root/flash_rom.sh && chmod +x package/base-files/files/root/flash_rom.sh
          . ../../scripts/add-for-statusview.sh
          . ../../scripts/buildtime.sh
          rm -f ./feeds.conf.default && wget -O ./feeds.conf.default https://raw.githubusercontent.com/kongfl888/OpenWrt4R2S/master/JUNK/feeds.conf.default
      
      - name: Update Feeds
        run: |
          cd friendlywrt-rk3328/friendlywrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Update package
        run: |
          git clone -b openwrt-19.07 --single-branch https://github.com/project-openwrt/openwrt.git
          . ./scripts/original-package.sh 34
      
      - name: Build FriendlyWrt
        run: |
          cd friendlywrt-rk3328
          . ../scripts/rename_sdimg.sh 24 || echo ""
          sed -i 's/set -eu/set -u/' scripts/mk-friendlywrt.sh
          ./build.sh nanopi_r2s.mk
      - name: Zip Files
        run: |
          gzip friendlywrt-rk3328/out/*.img
      - name: Assemble Artifact
        id: assemble_artifact
        run: |
          #gzip openwrt/bin/targets/*/*/*img*
          mv openwrt/bin/targets/*/*/*ext4*img.gz ./artifact.img.gz
          release_tag="R2S-native-$(date +%Y-%m-%d)-dev"
          echo "##[set-output name=release_tag;]$release_tag"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.sec_token }}
        with:
          tag_name: ${{ steps.assemble_artifact.outputs.release_tag }}
          release_name: r2s openwrt 测试 ${{ steps.assemble_artifact.outputs.release_tag }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.sec_token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./artifact.img.gz
          asset_name: ${{ steps.assemble_artifact.outputs.release_tag }}-sd.img.gz
          asset_content_type: application/gzip
